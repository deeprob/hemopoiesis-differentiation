clusterSample <- hclust(distanceSample, method="average")
# Construct a dendogram for samples
install.packages("ggdendro")
library(ggdendro)
sampleModel <- as.dendrogram(clusterSample)
sampleDendrogramData <- segment(dendro_data(sampleModel, type = "rectangle"))
sampleDendrogram <- ggplot(sampleDendrogramData) + geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) + theme_dendro()
# Re-factor samples for ggplot2
deseq2VST$variable <- factor(deseq2VST$variable, levels=clusterSample$labels[clusterSample$order])
# Construct the heatmap. note that at this point we have only clustered the samples NOT the genes
heatmap <- ggplot(deseq2VST, aes(x=variable, y=Gene, fill=value)) + geom_raster() + scale_fill_viridis(trans="sqrt") + theme(axis.text.x=element_text(angle=65, hjust=1), axis.text.y=element_blank(), axis.ticks.y=element_blank())
heatmap
# Combine the dendrogram and the heatmap
install.packages("gridExtra")
library(gridExtra)
grid.arrange(sampleDendrogram, heatmap, ncol=1, heights=c(1,5))
install.packages("ggdendro")
library(ggdendro)
sampleModel <- as.dendrogram(clusterSample)
sampleDendrogramData <- segment(dendro_data(sampleModel, type = "rectangle"))
sampleDendrogram <- ggplot(sampleDendrogramData) + geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) + theme_dendro()
sampleModel <- as.dendrogram(clusterSample)
sampleDendrogramData <- segment(dendro_data(sampleModel, type = "rectangle"))
sampleDendrogram <- ggplot2(sampleDendrogramData) + geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) + theme_dendro()
# Re-factor samples for ggplot2
library(ggplot2)
sampleModel <- as.dendrogram(clusterSample)
sampleDendrogramData <- segment(dendro_data(sampleModel, type = "rectangle"))
sampleDendrogram <- ggplot(sampleDendrogramData) + geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) + theme_dendro()
deseq2VST$variable <- factor(deseq2VST$variable, levels=clusterSample$labels[clusterSample$order])
heatmap <- ggplot(deseq2VST, aes(x=variable, y=Gene, fill=value)) + geom_raster() + scale_fill_viridis(trans="sqrt") + theme(axis.text.x=element_text(angle=65, hjust=1), axis.text.y=element_blank(), axis.ticks.y=element_blank())
heatmap
library(veridis)
library(viridis)
heatmap <- ggplot(deseq2VST, aes(x=variable, y=Gene, fill=value)) + geom_raster() + scale_fill_viridis(trans="sqrt") + theme(axis.text.x=element_text(angle=65, hjust=1), axis.text.y=element_blank(), axis.ticks.y=element_blank())
heatmap
library(gridExtra)
grid.arrange(sampleDendrogram, heatmap, ncol=1, heights=c(1,5))
library(gridExtra)
grid.arrange(sampleDendrogram, heatmap, ncol=1, heights=c(1,3))
library(gridExtra)
grid.arrange(sampleDendrogram, heatmap, ncol=1, heights=c(1,10))
library(gridExtra)
grid.arrange(sampleDendrogram, heatmap, ncol=1, heights=c(1,2))
library(gridExtra)
grid.arrange(sampleDendrogram, heatmap, ncol=1, heights=c(1))
library(gridExtra)
grid.arrange(sampleDendrogram, heatmap, ncol=1, heights=c(1,1))
library(gridExtra)
grid.arrange(sampleDendrogram, heatmap, ncol=1, heights=c(1,6))
geneid <- bak
geneid <- bak
genes <- select(Homo.sapiens, keys=geneid, columns=c("SYMBOL", "TXCHROM"),
keytype="ENTREZID")
head(genes)
BiocManager::install(biomart)
BiocManager::install(biomaRt)
BiocManager::install("biomaRt")
BiocManager::install("biomaRt")
BiocManager::install("biomaRt")
library(biomaRt)
genes <- select(Homo.sapiens, keys=geneid, columns=c("SYMBOL", "TXCHROM"),
keytype="ENTREZID")
head(genes)
genes <- select(Homo.sapiens, keys=geneid, columns=c("SYMBOL", "TXCHROM"), keytype="ENTREZID")
bak
genes <- select(Homo.sapiens, keys=geneid, columns=c("SYMBOL", "TXCHROM"), keytype="ENTREZID")
genes <- select(homo.sapiens, keys=geneid, columns=c("SYMBOL", "TXCHROM"), keytype="ENTREZID")
genes <- select(homo, keys=geneid, columns=c("SYMBOL", "TXCHROM"), keytype="ENTREZID")
biomaRt::select(Homo.sapiens, keys=geneid, columns=c("SYMBOL", "TXCHROM"), keytype="ENTREZID")
listMarts()
tail(bak)
ensembl67 <- useMart(host='may2012.archive.ensembl.org', biomart='ENSEMBL_MART_ENSEMBL', dataset = "mmusculus_gene_ensembl")
ensembl76 <- useMart("ensembl", dataset="mmusculus_gene_ensembl")
head(ensembl67)
head(ensembl76)
ensembl76 <- useMart("ensembl", dataset="mmusculus_gene_ensembl")
ensembl67 <- useMart(host='may2012.archive.ensembl.org', biomart='ENSEMBL_MART_ENSEMBL', dataset = "mmusculus_gene_ensembl")
counts_file <- system.file("extdata/rna-seq/SRP029880.raw_counts.tsv",
package = "compGenomRData")
coldata_file <- system.file("extdata/rna-seq/SRP029880.colData.tsv",
package = "compGenomRData")
head(counts_file)
counts <- as.matrix(read.table(counts_file, header = T, sep = '\t'))
counts
countss
DESeq2Features <- data.frame(ensembl_gene_id = bak))
DESeq2Features <- data.frame(ensembl_gene_id = as.vector(bak))
DESeq2Features$ensembl_gene_id <- as.character(DESeq2Features$ensembl_gene_id)
library(dplyr)
### join them together
rowData <- dplyr::left_join(DESeq2Features, bm, by = "ensembl_gene_id")
rowData <- as(rowData, "DataFrame")
### add the annotation to the DESeq2 table
mcols(rowData(DESeq2Table)) <- c(mcols(rowData(DESeq2Table)),rowData)
rowData <- dplyr::left_join(DESeq2Features, bm, by = "ensembl_gene_id")
rowData <- as(rowData, "DataFrame")
rowData <- dplyr::left_join(DESeq2Features, bm, by = "ensembl_gene_id")
bm <- getBM(attributes=c("ensembl_gene_id", "external_gene_id", "description"), filter="ensembl_gene_id", values= rownames(DESeq2Table), mart=ensembl67 )
bm <- getBM(attributes=c("ensembl_gene_id", "external_gene_id", "description"), filter="ensembl_gene_id", values= as.vector(bak), mart=ensembl67 )
### join them together
rowData <- dplyr::left_join(DESeq2Features, bm, by = "ensembl_gene_id")
rowData <- as(rowData, "DataFrame")
### add the annotation to the DESeq2 table
mcols(rowData(DESeq2Table)) <- c(mcols(rowData(DESeq2Table)),rowData)
rowData <- dplyr::left_join(DESeq2Features, bm, by = "ensembl_gene_id")
bm <- getBM(attributes=c("ensembl_gene_id", "external_gene_id", "description"), filter="ensembl_gene_id", values= as.character(bak), mart=ensembl67 )
### join them together
rowData <- dplyr::left_join(DESeq2Features, bm, by = "ensembl_gene_id")
rowData <- as(rowData, "DataFrame")
DESeq2Features <- data.frame(ensembl_gene_id = as.character(bak))
rowData <- dplyr::left_join(DESeq2Features, bm, by = "ensembl_gene_id")
DESeq2Features
class(DESeq2Features$ensembl_gene_id)
bm
bm <- getBM(attributes=c("ensembl_gene_id", "external_gene_id", "description"), filter="ensembl_gene_id", values= bak, mart=ensembl67 )
bm
bm <- getBM(attributes=c("ensembl_gene_id", "external_gene_id", "description"), filter="ensembl_gene_id", values= as.vector(bak), mart=ensembl67 )
bm
bm <- getBM(attributes=c("ensembl_gene_id", "external_gene_id", "description"), filter="ensembl_gene_id", values= bak[1]), mart=ensembl67 )
bm <- getBM(attributes=c("ensembl_gene_id", "external_gene_id", "description"), filter="ensembl_gene_id", values= bak$1, mart=ensembl67 )
bak
bm <- getBM(attributes=c("ensembl_gene_id", "external_gene_id", "description"), filter="ensembl_gene_id", values= bak, mart=ensembl67 )
bm
ensembl76 <- useMart("ensembl", dataset="mmusculus_gene_ensembl")
ensembl76 <- useMart("ensembl", dataset="mmusculus_gene_ensembl")
ensembl67
bm <- getBM(attributes=c("ensembl_gene_id", "external_gene_id", "description"), filter="ensembl_gene_id", values= bak, mart=ensembl67 )
bm
bm <- getBM(attributes=c("ensembl_gene_id", "external_gene_id", "description"), filter="ensembl_gene_id", values= bak, mart=ensembl67)
bm <- getBM(attributes=c("ensembl_gene_id", "external_gene_id", "description"), filter="ensembl_gene_id", values= bak, ma=ensembl67 )
bm
?getBM()
tail(bak)
bm <- getBM(attributes=c("ensembl_gene_id", "external_gene_id", "description"), filter="ensembl_gene_id", values= "gSpikein_ERCC-00170", mart=ensembl67)
bm
bak[100]
bak[10000]
bak[100000]
bak[50000]
bm <- getBM(attributes=c("ensembl_gene_id", "external_gene_id", "description"), filter="ensembl_gene_id", values= "ENSMUSG00000081098.1", mart=ensembl67)
bm
bak1 <- gsub(".*$", "", bak)
bak1
bak1 <- gsub(",.*$", "", bak)
bak1
bak1 <- gsub("..*$", "", bak)
bak1
bak1 <- gsub(",.*$", "", bak)
bak1 <- gsub(",.*$". "", bak)
bak1 <- gsub(",.*$", "". bak)
bak1 <- gsub(".,.*$", "", bak)
bak1
bak1[50000]
bak1 <- gsub(",.*$", "", bak)
bak1[50000]
bak1 <- gsub("..*$", "", bak)
bak1[50000]
bak1 <- gsub(",,*$", "", bak)
bak1[50000]
bak1=sub("\\.*", "", bak)
bak1
bak1[50000]
bak1=sub("\\..*", "", bak)
bak1[50000]
bm <- getBM(attributes=c("ensembl_gene_id", "external_gene_id", "description"), filter="ensembl_gene_id", values= "ENSMUSG00000081098", mart=ensembl67)
bm
bm <- getBM(attributes=c("ensembl_gene_id", "external_gene_id", "description"), filter="ensembl_gene_id", values=as.vector(bak), mart=ensembl67)
bm
as.vector(bak)
bm <- getBM(attributes=c("ensembl_gene_id", "external_gene_id", "description"), filter="ensembl_gene_id", values=as.vector(bak1), mart=ensembl67)
bm
legth(bm)
length(bm)
dim(bm)
dim(bak1)
length(bak1)
tail(bak)
### join them together
rowData <- dplyr::left_join(DESeq2Features, bm, by = "ensembl_gene_id")
rowData <- as(rowData, "DataFrame")
### add the annotation to the DESeq2 table
mcols(rowData(DESeq2Table)) <- c(mcols(rowData(DESeq2Table)),rowData)
#save(DESeq2Table, file = "geneCounts.RData")
library(GenomicRanges)
### join them together
rowData <- dplyr::left_join(DESeq2Features, bm, by = "ensembl_gene_id")
rowData <- as(rowData, "DataFrame")
### add the annotation to the DESeq2 table
mcols(rowData(DESeq2Table)) <- c(mcols(rowData(DESeq2Table)),rowData)
#save(DESeq2Table, file = "geneCounts.RData")
rowData <- dplyr::left_join(DESeq2Features, bm, by = "ensembl_gene_id")
rowData <- as(rowData, "DataFrame")
### join them together
rowData <- dplyr::left_join(DESeq2Features, bm, by = "ensembl_gene_id")
rowData <- as(rowData, "DataFrame")
### add the annotation to the DESeq2 table
mcols(rowData(DESeq2Table)) <- c(mcols(rowData(rsem.de)),rowData)
mcols(rowData(rsem.de)) <- c(mcols(rowData(rsem.de),rowData)
### add the annotation to the DESeq2 table
mcols(rowData(rsem.de)) <- c(mcols(rowData(rsem.de)),rowData)
mcols(rowData(rsem.de)) <- c(mcols(rowData(rsem.de),rowData)
#save(DESeq2Table, file = "geneCounts.RData")
mcols(rowData(rsem.de)) <- c(mcols(rowData(rsem.de),rowData))
#save(DESeq2Table, file = "geneCounts.RData")
mcols(rowData(rsem.de)) <- c(mcols(rowData(rsem.de),rowData))
rowData <- as(rowData, "DataFrame")
rowData
rowData[50000]
rowData[5000]
rowData[500]
rowData <- dplyr::left_join(DESeq2Features, bm, by = "ensembl_gene_id")
rowData
rowData[50000]
rowData[,50000]
rowData[3]
rowData[,5]
rowData[1,3]
rowData[1,500]
rowData[1,5000]
rowData[1,50000]
rowData[2,50000]
rowData[,50000]
rowData
rowData[1,1329]
rowData[1,329]
rowData[2,329]
rowData[(2,329)]
rowData$1
rowData[1]
rowData[1,500]
rowData[1][500]
rowData[1][5]
rowData[1,1)
rowData[1,1]
rowData[1,2]
rowData[2,2]
rowData[2,1]
rowData[2,30]
rowData[3,3]
rowData[2,3]
rowData[3,2]
rowData[2,3]
rowData
rowData[2,10]
rowData[2,1]
rowData[2,]
rowData[2,2]
rowData[2,1]
rowData[,1]
rowData[500,1]
rowData[50000,1]
DESeq2Features <- data.frame(ensembl_gene_id = as.character(bak1))
DESeq2Features$ensembl_gene_id <- as.character(DESeq2Features$ensembl_gene_id)
rowData <- dplyr::left_join(DESeq2Features, bm, by = "ensembl_gene_id")
rowData <- as(rowData, "DataFrame")
mcols(rowData(rsem.de)) <- c(mcols(rowData(rsem.de),rowData))
### add the annotation to the DESeq2 table
mcols(rowData(rsem.de)) <- c(mcols(rowData(rsem.de))
mcols(rowData(rsem.de)) <- c(mcols(rowData(rsem.de)))
install.packages(knitr)
install.packages(rmdformats)
install.packages(dplyr)
install.packages(DT)
install.packages(tidyr)
install.packages(ggplot2)
install.packages(magrittr)
install.packages(devtools)
source('https://bioconductor.org/biocLite.R')
#Needed for mac and Linux only biocLite(Rsubread) ##
biocLite(Rsamtools)
biocLite(GenomicAlignments)
biocLite(TxDb.Hsapiens.UCSC.hg19.knownGene)
biocLite(soGGi)
biocLite(rtracklayer)
biocLite(ChIPQC)
biocLite(ChIPseeker)
biocLite(rGREAT)
biocLite(limma)
biocLite(DESeq2)
biocLite(TxDb.Mmusculus.UCSC.mm10.knownGene)
biocLite(tracktables)
biocLite(clusterProfiler)
biocLite(org.Mm.eg.db)
biocLite(MotifDb)
biocLite(Biostrings)
biocLite(BSgenome.Hsapiens.UCSC.hg19)
Finally we need development version of soGGi (named here 1.10.4) not
version on Bioconductor (1.10.0)
devtools::install_github('ThomasCarroll/soGGi')
library(GenomicRanges)
library(limma)
library(dplyr)
library(DT)
library(GenomicRanges)
library(tidyr)
library(pheatmap)
library(DESeq2)
library(BSgenome.Mmusculus.UCSC.mm10)
library(tracktables)
library(Rsubread)
library(clusterProfiler)
library(ChIPseeker)
library(org.Mm.eg.db)
library(TxDb.Mmusculus.UCSC.mm10.knownGene)
BiocManager::install("clusterProfiler", version = "3.8")
BiocManager::install("pathview")
BiocManager::install("enrichplot")
library(limma)
library(dplyr)
library(DT)
library(GenomicRanges)
library(tidyr)
library(pheatmap)
library(DESeq2)
library(BSgenome.Mmusculus.UCSC.mm10)
library(tracktables)
library(Rsubread)
library(clusterProfiler)
library(enrichplot)
library(ChIPseeker)
library(org.Mm.eg.db)
library(TxDb.Mmusculus.UCSC.mm10.knownGene)
filePath <- "~/GitHub/hemopoiesis-differentiation/data/Bams/"
sampleNames <- c("ENCFF711QAL", "ENCFF620WGW", "ENCFF199ZJX", "ENCFF535OJU")
peaks <- sapply(sampleNames, function(x) read.csv(file=paste0(filePath, x, "_peaks.narrowpeak"), header=T, sep="\t"), simplify=F)
filePath <- "~/GitHub/hemopoiesis-differentiation/data/Bams/"
sampleNames <- c("ENCFF711QAL", "ENCFF620WGW", "ENCFF199ZJX", "ENCFF535OJU")
peaks <- sapply(sampleNames, function(x) read.csv(file=paste0(filePath, x, "_peaks.narrowpeak"), header=T, sep="\t"), simplify=F)
filePath <- "~/GitHub/hemopoiesis-differentiation/data/Bams/"
sampleNames <- c("ENCFF711QAL", "ENCFF620WGW", "ENCFF199ZJX", "ENCFF535OJU")
peaks <- sapply(sampleNames, function(x) read.csv(file=paste0(filePath, x, "_peaks.narrowpeak"), header=T, sep="\t"), simplify=F)
filePath <- "~/GitHub/hemopoiesis-differentiation/data/Bams/"
sampleNames <- c("ENCFF711QAL", "ENCFF620WGW", "ENCFF199ZJX", "ENCFF535OJU")
peaks <- sapply(sampleNames, function(x) read.csv(file=paste0(filePath, x, "_peaks.narrowpeak"), header=T, sep="\t"), simplify=F)
myPeaks <- lapply(peaks, ChIPQC:::GetGRanges, simple = TRUE)
names(myPeaks) <- c("HSC", "HSC", "CMP", "CMP")
Group=factor(c("HSC","HSC","CMP","CMP"))
myGRangesList<-GRangesList(myPeaks)
reduced <- reduce(unlist(myGRangesList))
consensusIDs <- paste0("consensus_", seq(1, length(reduced)))
mcols(reduced) <- do.call(cbind, lapply(myGRangesList, function(x) (reduced %over% x) + 0))
reducedConsensus <- reduced
mcols(reducedConsensus) <- cbind(as.data.frame(mcols(reducedConsensus)), consensusIDs)
consensusIDs <- paste0("consensus_", seq(1, length(reducedConsensus)))
reducedConsensus
as.data.frame(elementMetadata(reducedConsensus)) %>% dplyr::select(starts_with("HSC")) %>%
vennDiagram(main = "Overlap for Liver open regions")
myPlot <- as.data.frame(elementMetadata(reducedConsensus)) %>% dplyr::select(-consensusIDs) %>%
as.matrix %>% t %>% prcomp %>% .$x %>% data.frame %>% mutate(Samples = rownames(.)) %>%
mutate(Group = gsub("_\\d", "", Samples)) %>% ggplot(aes(x = PC1, y = PC2,
colour = Group)) + geom_point(size = 5)
myPlot
occurrences <- elementMetadata(reducedConsensus) %>% as.data.frame %>% dplyr::select(-consensusIDs) %>%
rowSums
table(occurrences) %>% rev %>% cumsum
consensusToCount <- reducedConsensus[occurrences >= 2, ]
consensusToCount
filePath <- "~/GitHub/hemopoiesis-differentiation/data/Bams/"
sampleNames <- c("ENCFF250YAL", "ENCFF958EPJ", "ENCFF711QAL", "ENCFF620WGW")
bamsToCount<- c("ENCFF250YAL.bam", "ENCFF958EPJ.bam", "ENCFF711QAL.bam", "ENCFF620WGW.bam")
# indexBam(bamsToCount)
regionsToCount <- data.frame(GeneID = paste("ID", seqnames(consensusToCount),
start(consensusToCount), end(consensusToCount), sep = "_"), Chr = seqnames(consensusToCount),
Start = start(consensusToCount), End = end(consensusToCount), Strand = strand(consensusToCount))
fcResults <- featureCounts(files=bamsToCount,annot.ext=regionsToCount,isPairedEnd = FALSE,countMultiMappingReads = FALSE,maxFragLength=100)
myCounts <- fcResults$counts
colnames(myCounts) <- c("HSC_1","HSC_2","CMP_1","CMP_2")
save(myCounts, file = "countsFromATAC.RData")
pheatmap(myCounts[1:100,], scale='row', show_rownames = FALSE)
metaData <- data.frame(Group, row.names = colnames(myCounts))
atacDDS <- DESeqDataSetFromMatrix(myCounts, metaData, ~Group, rowRanges = consensusToCount)
atacDDS <- DESeq(atacDDS)
atac_Rlog <- rlog(atacDDS)
plotPCA(atac_Rlog, intgroup = "Group", ntop = nrow(atac_Rlog))
sampleNames <- c("ENCFF711QAL", "ENCFF620WGW", "ENCFF199ZJX", "ENCFF535OJU")
bamsToCount<- c("ENCFF711QAL.bam", "ENCFF620WGW.bam", "ENCFF199ZJX.bam", "ENCFF535OJU.bam")
# indexBam(bamsToCount)
regionsToCount <- data.frame(GeneID = paste("ID", seqnames(consensusToCount),
start(consensusToCount), end(consensusToCount), sep = "_"), Chr = seqnames(consensusToCount),
Start = start(consensusToCount), End = end(consensusToCount), Strand = strand(consensusToCount))
fcResults <- featureCounts(files=bamsToCount,annot.ext=regionsToCount,isPairedEnd = FALSE,countMultiMappingReads = FALSE,maxFragLength=100)
myCounts <- fcResults$counts
colnames(myCounts) <- c("HSC_1","HSC_2","CMP_1","CMP_2")
save(myCounts, file = "countsFromATAC.RData")
pheatmap(myCounts[1:100,], scale='row', show_rownames = FALSE)
metaData <- data.frame(Group, row.names = colnames(myCounts))
atacDDS <- DESeqDataSetFromMatrix(myCounts, metaData, ~Group, rowRanges = consensusToCount)
atacDDS <- DESeq(atacDDS)
atac_Rlog <- rlog(atacDDS)
plotPCA(atac_Rlog, intgroup = "Group", ntop = nrow(atac_Rlog))
HSCMinusCMP<- results(atacDDS, c("Group", "HSC", "CMP"), format = "GRanges")
HSCMinusCMP<- HSCMinusCMP[order(HSCMinusCMP$pvalue)]
HSCMinusCMP
toOverLap <- promoters(TxDb.Mmusculus.UCSC.mm10.knownGene, 500, 500)
HSCMinusCMP <- HSCMinusCMP[(!is.na(HSCMinusCMP$padj) & HSCMinusCMP$pvalue < 0.05) & HSCMinusCMP %over% toOverLap]
makebedtable(HSCMinusCMP, "HSCMinusCMP.html", filePath)
sampleNames <- c("ENCFF711QAL", "ENCFF620WGW", "ENCFF199ZJX", "ENCFF535OJU")
bamsToCount<- c("ENCFF711QAL.bam", "ENCFF620WGW.bam", "ENCFF199ZJX.bam", "ENCFF535OJU.bam")
# indexBam(bamsToCount)
regionsToCount <- data.frame(GeneID = paste("ID", seqnames(consensusToCount),
start(consensusToCount), end(consensusToCount), sep = "_"), Chr = seqnames(consensusToCount),
Start = start(consensusToCount), End = end(consensusToCount), Strand = strand(consensusToCount))
fcResults <- featureCounts(files=bamsToCount,annot.ext=regionsToCount,isPairedEnd = FALSE,countMultiMappingReads = FALSE,maxFragLength=100)
myCounts <- fcResults$counts
colnames(myCounts) <- c("HSC_1","HSC_2","CMP_1","CMP_2")
save(myCounts, file = "countsFromATAC.RData")
myPeaks <- lapply(peaks, ChIPQC:::GetGRanges, simple = TRUE)
names(myPeaks) <- c("HSC", "HSC", "CMP", "CMP")
Group=factor(c("HSC","HSC","CMP","CMP"))
myGRangesList<-GRangesList(myPeaks)
reduced <- reduce(unlist(myGRangesList))
consensusIDs <- paste0("consensus_", seq(1, length(reduced)))
mcols(reduced) <- do.call(cbind, lapply(myGRangesList, function(x) (reduced %over% x) + 0))
reducedConsensus <- reduced
mcols(reducedConsensus) <- cbind(as.data.frame(mcols(reducedConsensus)), consensusIDs)
consensusIDs <- paste0("consensus_", seq(1, length(reducedConsensus)))
reducedConsensus
as.data.frame(elementMetadata(reducedConsensus)) %>% dplyr::select(starts_with("HSC")) %>%
vennDiagram(main = "Overlap for Liver open regions")
myPlot <- as.data.frame(elementMetadata(reducedConsensus)) %>% dplyr::select(-consensusIDs) %>%
as.matrix %>% t %>% prcomp %>% .$x %>% data.frame %>% mutate(Samples = rownames(.)) %>%
mutate(Group = gsub("_\\d", "", Samples)) %>% ggplot(aes(x = PC1, y = PC2,
colour = Group)) + geom_point(size = 5)
myPlot
occurrences <- elementMetadata(reducedConsensus) %>% as.data.frame %>% dplyr::select(-consensusIDs) %>%
rowSums
table(occurrences) %>% rev %>% cumsum
consensusToCount <- reducedConsensus[occurrences >= 2, ]
consensusToCount
sampleNames <- c("ENCFF711QAL", "ENCFF620WGW", "ENCFF199ZJX", "ENCFF535OJU")
bamsToCount<- c("ENCFF711QAL.bam", "ENCFF620WGW.bam", "ENCFF199ZJX.bam", "ENCFF535OJU.bam")
# indexBam(bamsToCount)
regionsToCount <- data.frame(GeneID = paste("ID", seqnames(consensusToCount),
start(consensusToCount), end(consensusToCount), sep = "_"), Chr = seqnames(consensusToCount),
Start = start(consensusToCount), End = end(consensusToCount), Strand = strand(consensusToCount))
fcResults <- featureCounts(files=bamsToCount,annot.ext=regionsToCount,isPairedEnd = FALSE,countMultiMappingReads = FALSE,maxFragLength=100)
myCounts <- fcResults$counts
colnames(myCounts) <- c("HSC_1","HSC_2","CMP_1","CMP_2")
save(myCounts, file = "countsFromATAC.RData")
pheatmap(myCounts[1:100,], scale='row', show_rownames = FALSE)
sampleNames <- c("ENCFF711QAL", "ENCFF620WGW", "ENCFF199ZJX", "ENCFF535OJU")
bamsToCount<- c("ENCFF711QAL.bam", "ENCFF620WGW.bam", "ENCFF199ZJX.bam", "ENCFF535OJU.bam")
sampleNames <- c("ENCFF711QAL", "ENCFF620WGW", "ENCFF199ZJX", "ENCFF535OJU")
bamsToCount<- c("ENCFF711QAL.bam", "ENCFF620WGW.bam", "ENCFF199ZJX.bam", "ENCFF535OJU.bam")
# indexBam(bamsToCount)
regionsToCount <- data.frame(GeneID = paste("ID", seqnames(consensusToCount),
start(consensusToCount), end(consensusToCount), sep = "_"), Chr = seqnames(consensusToCount),
Start = start(consensusToCount), End = end(consensusToCount), Strand = strand(consensusToCount))
fcResults <- featureCounts(files=bamsToCount,annot.ext=regionsToCount,isPairedEnd = FALSE,countMultiMappingReads = FALSE,maxFragLength=100)
filePath <- "~/GitHub/hemopoiesis-differentiation/data/Bams/"
sampleNames <- c("ENCFF711QAL", "ENCFF620WGW", "ENCFF199ZJX", "ENCFF535OJU")
bamsToCount<- c("ENCFF711QAL.bam", "ENCFF620WGW.bam", "ENCFF199ZJX.bam", "ENCFF535OJU.bam")
# indexBam(bamsToCount)
regionsToCount <- data.frame(GeneID = paste("ID", seqnames(consensusToCount),
start(consensusToCount), end(consensusToCount), sep = "_"), Chr = seqnames(consensusToCount),
Start = start(consensusToCount), End = end(consensusToCount), Strand = strand(consensusToCount))
fcResults <- featureCounts(files=bamsToCount,annot.ext=regionsToCount,isPairedEnd = FALSE,countMultiMappingReads = FALSE,maxFragLength=100)
filePath <- "~/GitHub/hemopoiesis-differentiation/data/Bams/"
bamsToCount<- c("ENCFF711QAL.bam", "ENCFF620WGW.bam", "ENCFF199ZJX.bam", "ENCFF535OJU.bam")
bamsToCount
regionsToCount <- data.frame(GeneID = paste("ID", seqnames(consensusToCount),
start(consensusToCount), end(consensusToCount), sep = "_"), Chr = seqnames(consensusToCount),
Start = start(consensusToCount), End = end(consensusToCount), Strand = strand(consensusToCount))
fcResults <- featureCounts(files=bamsToCount,annot.ext=regionsToCount,isPairedEnd = FALSE,countMultiMappingReads = FALSE,maxFragLength=100)
filePath <- "~/GitHub/hemopoiesis-differentiation/data/Bams/"
bamsToCount<- c("ENCFF711QAL.bam", "ENCFF620WGW.bam", "ENCFF199ZJX.bam", "ENCFF535OJU.bam")
setwd("~/GitHub/hemopoiesis-differentiation/data/Bams")
filePath <- "~/GitHub/hemopoiesis-differentiation/data/Bams/"
bamsToCount<- c("ENCFF711QAL.bam", "ENCFF620WGW.bam", "ENCFF199ZJX.bam", "ENCFF535OJU.bam")
# indexBam(bamsToCount)
regionsToCount <- data.frame(GeneID = paste("ID", seqnames(consensusToCount),
start(consensusToCount), end(consensusToCount), sep = "_"), Chr = seqnames(consensusToCount),
Start = start(consensusToCount), End = end(consensusToCount), Strand = strand(consensusToCount))
fcResults <- featureCounts(files=bamsToCount,annot.ext=regionsToCount,isPairedEnd = FALSE,countMultiMappingReads = FALSE,maxFragLength=100)
myCounts <- fcResults$counts
colnames(myCounts) <- c("HSC_1","HSC_2","CMP_1","CMP_2")
save(myCounts, file = "countsFromATAC.RData")
pheatmap(myCounts[1:100,], scale='row', show_rownames = FALSE)
metaData <- data.frame(Group, row.names = colnames(myCounts))
atacDDS <- DESeqDataSetFromMatrix(myCounts, metaData, ~Group, rowRanges = consensusToCount)
atacDDS <- DESeq(atacDDS)
atac_Rlog <- rlog(atacDDS)
plotPCA(atac_Rlog, intgroup = "Group", ntop = nrow(atac_Rlog))
HSCMinusCMP<- results(atacDDS, c("Group", "HSC", "CMP"), format = "GRanges")
HSCMinusCMP<- HSCMinusCMP[order(HSCMinusCMP$pvalue)]
HSCMinusCMP
toOverLap <- promoters(TxDb.Mmusculus.UCSC.mm10.knownGene, 500, 500)
HSCMinusCMP <- HSCMinusCMP[(!is.na(HSCMinusCMP$padj) & HSCMinusCMP$pvalue < 0.05) & HSCMinusCMP %over% toOverLap]
makebedtable(HSCMinusCMP, "HSCMinusCMP.html", filePath)
anno_HSCMinusCMP <- annotatePeak(HSCMinusCMP, TxDb = TxDb.Mmusculus.UCSC.mm10.knownGene)
plotAnnoPie(anno_HSCMinusCMP)
go1 <- enrichGO(as.data.frame(as.GRanges(anno_HSCMinusCMP )[as.GRanges(anno_HSCMinusCMP )$log2FoldChange >
0])$geneId, OrgDb = "org.Mm.eg.db", ont = "BP", maxGSSize = 5000)
go2 <- enrichGO(as.data.frame(as.GRanges(anno_HSCMinusCMP )[as.GRanges(anno_HSCMinusCMP)$log2FoldChange <
0])$geneId, OrgDb = "org.Mm.eg.db", ont = "BP", maxGSSize = 5000)
head(go1, 10) %>% dplyr::select(ID, Description, pvalue, p.adjust) %>% datatable(elementId = "goEle1")
head(go2, 10) %>% dplyr::select(ID, Description, pvalue, p.adjust) %>% datatable(elementId = "goEle2")
anno_HSCMinusCMP_GRanges <- as.GRanges(anno_HSCMinusCMP)
anno_HSCMinusCMP_df <- as.data.frame(anno_HSCMinusCMP)
write.table(anno_HSCMinusCMP_df, "anno_HSCMinusCMP.csv", quote = FALSE, row.names = FALSE, sep = ",")
pheatmap(myCounts[1:100,], scale='row', show_rownames = FALSE)
library(stats)
correlationMatrix <- cor(myCounts[1:1000,1:4])
library(corrplot)
corrplot(correlationMatrix, order = 'hclust',  addrect = 6, addCoef.col = 'white', number.cex = 0.7)
coldata=as.factor(sampleMetaData[1:2])
library(pheatmap)
pheatmap(correlationMatrix,cutree_cols = 2)
BiocManager::install("clusterProfiler", version = "3.8")
BiocManager::install("pathview")
BiocManager::install("enrichplot")
